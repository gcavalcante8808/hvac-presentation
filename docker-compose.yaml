version: '2.2'

volumes:
  db-data:
  vault-logs:
  vault-data:
  s3-data:


services:
  db:
    image: mysql:8.0
    ports:
    - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: db
      MYSQL_DATABASE: db
      MYSQL_USER: db
      MYSQL_PASSWORD: db
    volumes:
      - db-data:/var/lib/mysql

  app:
    image: matando-as-senhas-e-mostrando:o-vault
    build: .
    command: ["bash"]
    tty: true
    environment:
      - DB_HOST=db
      - DB_NAME=db
      - APP_ROLE_ID=
      - APP_SECRET_ID=
      - APP_DB_ROLE=da-todas-as-permissoes-na-base-db
      - STATIC_SECRET_PATH=mysql-apresentacao
      - VAULT_ADDR=http://vault:8200
    ports:
      - 5000:5000
    working_dir: /usr/src/matando_o_vault
    volumes:
      - ./matando_o_vault:/usr/src/matando_o_vault

  vault:
    image: vault:1.2.2
    cap_add:
    - IPC_LOCK
    ports:
      - 8200:8200
    environment:
    - VAULT_ADDR=http://127.0.0.1:8200
    - AWS_S3_ENDPOINT=http://s3:9000
    - AWS_S3_BUCKET=vault
    - AWS_ACCESS_KEY_ID=minio
    - AWS_SECRET_ACCESS_KEY=minio123
    volumes:
    - vault-logs:/vault/logs
    - vault-data:/vault/file
    - ./vault/default.hcl:/vault/config/default.hcl
    entrypoint: vault
    command: server -config /vault/config/default.hcl
    depends_on:
      s3:
        condition: service_healthy

  s3:
    image: gcavalcante8808/minio-dev
    volumes:
      - s3-data:/data
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      MINIO_INITIAL_BUCKET: vault
      MINIO_INITIAL_BUCKET_PERMISSION: none
      MINIO_DOMAIN: s3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      default:
        aliases:
        - vault.s3
